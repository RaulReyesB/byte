[1mdiff --git a/config/db.js b/config/db.js[m
[1mindex d89e5cd..369b3de 100644[m
[1m--- a/config/db.js[m
[1m+++ b/config/db.js[m
[36m@@ -5,7 +5,7 @@[m [mdotenv.config({path:".env"})[m
 [m
 const db = new Sequelize(process.env.BD_NAME,process.env.BD_USER,process.env.BD_PASSWORD,{[m
     host:process.env.BD_HOST,[m
[31m-    port:"3309",[m
[32m+[m[32m    port:"3306",[m
     dialect:"mysql",[m
     define:{timestamp:true},[m
     pool:{[m
[1mdiff --git a/controller/userControllers.js b/controller/userControllers.js[m
[1mindex 2439fe8..d9571b4 100644[m
[1m--- a/controller/userControllers.js[m
[1m+++ b/controller/userControllers.js[m
[36m@@ -10,26 +10,19 @@[m [mconst formularioLogin = (request, response) => {[m
   })[m
 }[m
 [m
[31m-const formularioRegistro = (request, response) => {[m
[31m-  response.render('auth/register.pug', {[m
[32m+[m[32mconst formularioRegistro = (request, response) =>{[m
[32m+[m[32m  response.render('auth/register.pug',{[m
     page: 'Nueva cuenta'[m
   })[m
 }[m
 [m
[31m-const formularioOlvidoContra = (request, response) => {[m
[31m-  response.render('auth/forgot-password.pug', {[m
[32m+[m[32mconst formularioOlvidoContra = (request, response) =>{[m
[32m+[m[32m  response.render('auth/forgot-password.pug',{[m
     page: 'Olvide ContraseÃ±a'[m
   })[m
 }[m
 [m
[31m-const tiket = (request, response) => {[m
[31m-  response.render('auth/tiket.pug', {[m
[31m-    page: tiket[m
[31m-  })[m
[31m-}[m
[31m-[m
[31m-[m
[31m-const insertUser = async (request, response) => {[m
[32m+[m[32mconst insertUser = async(request,response) =>{[m
   await check("name").notEmpty().withMessage("This field is REQUIRED: NAME").run(request)[m
 [m
 }[m
[36m@@ -37,6 +30,5 @@[m [mconst insertUser = async (request, response) => {[m
 export {[m
   formularioLogin,[m
   formularioRegistro,[m
[31m-  formularioOlvidoContra,[m
[31m-  tiket[m
[32m+[m[32m  formularioOlvidoContra[m
 }[m
[1mdiff --git a/node_modules/.bin/browsers b/node_modules/.bin/browsers[m
[1mdeleted file mode 100644[m
[1mindex f7a56f1..0000000[m
[1m--- a/node_modules/.bin/browsers[m
[1m+++ /dev/null[m
[36m@@ -1,12 +0,0 @@[m
[31m-#!/bin/sh[m
[31m-basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[31m-[m
[31m-case `uname` in[m
[31m-    *CYGWIN*|*MINGW*|*MSYS*) basedir=`cygpath -w "$basedir"`;;[m
[31m-esac[m
[31m-[m
[31m-if [ -x "$basedir/node" ]; then[m
[31m-  exec "$basedir/node"  "$basedir/../@puppeteer/browsers/lib/cjs/main-cli.js" "$@"[m
[31m-else [m
[31m-  exec node  "$basedir/../@puppeteer/browsers/lib/cjs/main-cli.js" "$@"[m
[31m-fi[m
[1mdiff --git a/node_modules/.bin/browsers.cmd b/node_modules/.bin/browsers.cmd[m
[1mdeleted file mode 100644[m
[1mindex 7cb5cf2..0000000[m
[1m--- a/node_modules/.bin/browsers.cmd[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-@ECHO off[m
[31m-GOTO start[m
[31m-:find_dp0[m
[31m-SET dp0=%~dp0[m
[31m-EXIT /b[m
[31m-:start[m
[31m-SETLOCAL[m
[31m-CALL :find_dp0[m
[31m-[m
[31m-IF EXIST "%dp0%\node.exe" ([m
[31m-  SET "_prog=%dp0%\node.exe"[m
[31m-) ELSE ([m
[31m-  SET "_prog=node"[m
[31m-  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[31m-)[m
[31m-[m
[31m-endLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\@puppeteer\browsers\lib\cjs\main-cli.js" %*[m
[1mdiff --git a/node_modules/.bin/browsers.ps1 b/node_modules/.bin/browsers.ps1[m
[1mdeleted file mode 100644[m
[1mindex 8c69573..0000000[m
[1m--- a/node_modules/.bin/browsers.ps1[m
[1m+++ /dev/null[m
[36m@@ -1,28 +0,0 @@[m
[31m-#!/usr/bin/env pwsh[m
[31m-$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[31m-[m
[31m-$exe=""[m
[31m-if ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[31m-  # Fix case when both the Windows and Linux builds of Node[m
[31m-  # are installed in the same directory[m
[31m-  $exe=".exe"[m
[31m-}[m
[31m-$ret=0[m
[31m-if (Test-Path "$basedir/node$exe") {[m
[31m-  # Support pipeline input[m
[31m-  if ($MyInvocation.ExpectingInput) {[m
[31m-    $input | & "$basedir/node$exe"  "$basedir/../@puppeteer/browsers/lib/cjs/main-cli.js" $args[m
[31m-  } else {[m
[31m-    & "$basedir/node$exe"  "$basedir/../@puppeteer/browsers/lib/cjs/main-cli.js" $args[m
[31m-  }[m
[31m-  $ret=$LASTEXITCODE[m
[31m-} else {[m
[31m-  # Support pipeline input[m
[31m-  if ($MyInvocation.ExpectingInput) {[m
[31m-    $input | & "node$exe"  "$basedir/../@puppeteer/browsers/lib/cjs/main-cli.js" $args[m
[31m-  } else {[m
[31m-    & "node$exe"  "$basedir/../@puppeteer/browsers/lib/cjs/main-cli.js" $args[m
[31m-  }[m
[31m-  $ret=$LASTEXITCODE[m
[31m-}[m
[31m-exit $ret[m
[1mdiff --git a/node_modules/.bin/escodegen b/node_modules/.bin/escodegen[m
[1mdeleted file mode 100644[m
[1mindex 63c8e99..0000000[m
[1m--- a/node_modules/.bin/escodegen[m
[1m+++ /dev/null[m
[36m@@ -1,12 +0,0 @@[m
[31m-#!/bin/sh[m
[31m-basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[31m-[m
[31m-case `uname` in[m
[31m-    *CYGWIN*|*MINGW*|*MSYS*) basedir=`cygpath -w "$basedir"`;;[m
[31m-esac[m
[31m-[m
[31m-if [ -x "$basedir/node" ]; then[m
[31m-  exec "$basedir/node"  "$basedir/../escodegen/bin/escodegen.js" "$@"[m
[31m-else [m
[31m-  exec node  "$basedir/../escodegen/bin/escodegen.js" "$@"[m
[31m-fi[m
[1mdiff --git a/node_modules/.bin/escodegen.cmd b/node_modules/.bin/escodegen.cmd[m
[1mdeleted file mode 100644[m
[1mindex 9ac38a7..0000000[m
[1m--- a/node_modules/.bin/escodegen.cmd[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-@ECHO off[m
[31m-GOTO start[m
[31m-:find_dp0[m
[31m-SET dp0=%~dp0[m
[31m-EXIT /b[m
[31m-:start[m
[31m-SETLOCAL[m
[31m-CALL :find_dp0[m
[31m-[m
[31m-IF EXIST "%dp0%\node.exe" ([m
[31m-  SET "_prog=%dp0%\node.exe"[m
[31m-) ELSE ([m
[31m-  SET "_prog=node"[m
[31m-  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[31m-)[m
[31m-[m
[31m-endLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\escodegen\bin\escodegen.js" %*[m
[1mdiff --git a/node_modules/.bin/escodegen.ps1 b/node_modules/.bin/escodegen.ps1[m
[1mdeleted file mode 100644[m
[1mindex 61d258e..0000000[m
[1m--- a/node_modules/.bin/escodegen.ps1[m
[1m+++ /dev/null[m
[36m@@ -1,28 +0,0 @@[m
[31m-#!/usr/bin/env pwsh[m
[31m-$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[31m-[m
[31m-$exe=""[m
[31m-if ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[31m-  # Fix case when both the Windows and Linux builds of Node[m
[31m-  # are installed in the same directory[m
[31m-  $exe=".exe"[m
[31m-}[m
[31m-$ret=0[m
[31m-if (Test-Path "$basedir/node$exe") {[m
[31m-  # Support pipeline input[m
[31m-  if ($MyInvocation.ExpectingInput) {[m
[31m-    $input | & "$basedir/node$exe"  "$basedir/../escodegen/bin/escodegen.js" $args[m
[31m-  } else {[m
[31m-    & "$basedir/node$exe"  "$basedir/../escodegen/bin/escodegen.js" $args[m
[31m-  }[m
[31m-  $ret=$LASTEXITCODE[m
[31m-} else {[m
[31m-  # Support pipeline input[m
[31m-  if ($MyInvocation.ExpectingInput) {[m
[31m-    $input | & "node$exe"  "$basedir/../escodegen/bin/escodegen.js" $args[m
[31m-  } else {[m
[31m-    & "node$exe"  "$basedir/../escodegen/bin/escodegen.js" $args[m
[31m-  }[m
[31m-  $ret=$LASTEXITCODE[m
[31m-}[m
[31m-exit $ret[m
[1mdiff --git a/node_modules/.bin/esgenerate b/node_modules/.bin/esgenerate[m
[1mdeleted file mode 100644[m
[1mindex 710797a..0000000[m
[1m--- a/node_modules/.bin/esgenerate[m
[1m+++ /dev/null[m
[36m@@ -1,12 +0,0 @@[m
[31m-#!/bin/sh[m
[31m-basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[31m-[m
[31m-case `uname` in[m
[31m-    *CYGWIN*|*MINGW*|*MSYS*) basedir=`cygpath -w "$basedir"`;;[m
[31m-esac[m
[31m-[m
[31m-if [ -x "$basedir/node" ]; then[m
[31m-  exec "$basedir/node"  "$basedir/../escodegen/bin/esgenerate.js" "$@"[m
[31m-else [m
[31m-  exec node  "$basedir/../escodegen/bin/esgenerate.js" "$@"[m
[31m-fi[m
[1mdiff --git a/node_modules/.bin/esgenerate.cmd b/node_modules/.bin/esgenerate.cmd[m
[1mdeleted file mode 100644[m
[1mindex 5c6426d..0000000[m
[1m--- a/node_modules/.bin/esgenerate.cmd[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-@ECHO off[m
[31m-GOTO start[m
[31m-:find_dp0[m
[31m-SET dp0=%~dp0[m
[31m-EXIT /b[m
[31m-:start[m
[31m-SETLOCAL[m
[31m-CALL :find_dp0[m
[31m-[m
[31m-IF EXIST "%dp0%\node.exe" ([m
[31m-  SET "_prog=%dp0%\node.exe"[m
[31m-) ELSE ([m
[31m-  SET "_prog=node"[m
[31m-  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[31m-)[m
[31m-[m
[31m-endLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\escodegen\bin\esgenerate.js" %*[m
[1mdiff --git a/node_modules/.bin/esgenerate.ps1 b/node_modules/.bin/esgenerate.ps1[m
[1mdeleted file mode 100644[m
[1mindex 8835d60..0000000[m
[1m--- a/node_modules/.bin/esgenerate.ps1[m
[1m+++ /dev/null[m
[36m@@ -1,28 +0,0 @@[m
[31m-#!/usr/bin/env pwsh[m
[31m-$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[31m-[m
[31m-$exe=""[m
[31m-if ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[31m-  # Fix case when both the Windows and Linux builds of Node[m
[31m-  # are installed in the same directory[m
[31m-  $exe=".exe"[m
[31m-}[m
[31m-$ret=0[m
[31m-if (Test-Path "$basedir/node$exe") {[m
[31m-  # Support pipeline input[m
[31m-  if ($MyInvocation.ExpectingInput) {[m
[31m-    $input | & "$basedir/node$exe"  "$basedir/../escodegen/bin/esgenerate.js" $args[m
[31m-  } else {[m
[31m-    & "$basedir/node$exe"  "$basedir/../escodegen/bin/esgenerate.js" $args[m
[31m-  }[m
[31m-  $ret=$LASTEXITCODE[m
[31m-} else {[m
[31m-  # Support pipeline input[m
[31m-  if ($MyInvocation.ExpectingInput) {[m
[31m-    $input | & "node$exe"  "$basedir/../escodegen/bin/esgenerate.js" $args[m
[31m-  } else {[m
[31m-    & "node$exe"  "$basedir/../escodegen/bin/esgenerate.js" $args[m
[31m-  }[m
[31m-  $ret=$LASTEXITCODE[m
[31m-}[m
[31m-exit $ret[m
[1mdiff --git a/node_modules/.bin/esparse b/node_modules/.bin/esparse[m
[1mdeleted file mode 100644[m
[1mindex 1cc1c96..0000000[m
[1m--- a/node_modules/.bin/esparse[m
[1m+++ /dev/null[m
[36m@@ -1,12 +0,0 @@[m
[31m-#!/bin/sh[m
[31m-basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[31m-[m
[31m-case `uname` in[m
[31m-    *CYGWIN*|*MINGW*|*MSYS*) basedir=`cygpath -w "$basedir"`;;[m
[31m-esac[m
[31m-[m
[31m-if [ -x "$basedir/node" ]; then[m
[31m-  exec "$basedir/node"  "$basedir/../esprima/bin/esparse.js" "$@"[m
[31m-else [m
[31m-  exec node  "$basedir/../esprima/bin/esparse.js" "$@"[m
[31m-fi[m
[1mdiff --git a/node_modules/.bin/esparse.cmd b/node_modules/.bin/esparse.cmd[m
[1mdeleted file mode 100644[m
[1mindex 2ca6d50..0000000[m
[1m--- a/node_modules/.bin/esparse.cmd[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-@ECHO off[m
[31m-GOTO start[m
[31m-:find_dp0[m
[31m-SET dp0=%~dp0[m
[31m-EXIT /b[m
[31m-:start[m
[31m-SETLOCAL[m
[31m-CALL :find_dp0[m
[31m-[m
[31m-IF EXIST "%dp0%\node.exe" ([m
[31m-  SET "_prog=%dp0%\node.exe"[m
[31m-) ELSE ([m
[31m-  SET "_prog=node"[m
[31m-  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[31m-)[m
[31m-[m
[31m-endLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\esprima\bin\esparse.js" %*[m
[1mdiff --git a/node_modules/.bin/esparse.ps1 b/node_modules/.bin/esparse.ps1[m
[1mdeleted file mode 100644[m
[1mindex f19ed73..0000000[m
[1m--- a/node_modules/.bin/esparse.ps1[m
[1m+++ /dev/null[m
[36m@@ -1,28 +0,0 @@[m
[31m-#!/usr/bin/env pwsh[m
[31m-$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[31m-[m
[31m-$exe=""[m
[31m-if ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[31m-  # Fix case when both the Windows and Linux builds of Node[m
[31m-  # are installed in the same directory[m
[31m-  $exe=".exe"[m
[31m-}[m
[31m-$ret=0[m
[31m-if (Test-Path "$basedir/node$exe") {[m
[31m-  # Support pipeline input[m
[31m-  if ($MyInvocation.ExpectingInput) {[m
[31m-    $input | & "$basedir/node$exe"  "$basedir/../esprima/bin/esparse.js" $args[m
[31m-  } else {[m
[31m-    & "$basedir/node$exe"  "$basedir/../esprima/bin/esparse.js" $args[m
[31m-  }[m
[31m-  $ret=$LASTEXITCODE[m
[31m-} else {[m
[31m-  # Support pipeline input[m
[31m-  if ($MyInvocation.ExpectingInput) {[m
[31m-    $input | & "node$exe"  "$basedir/../esprima/bin/esparse.js" $args[m
[31m-  } else {[m
[31m-    & "node$exe"  "$basedir/../esprima/bin/esparse.js" $args[m
[31m-  }[m
[31m-  $ret=$LASTEXITCODE[m
[31m-}[m
[31m-exit $ret[m
[1mdiff --git a/node_modules/.bin/esvalidate b/node_modules/.bin/esvalidate[m
[1mdeleted file mode 100644[m
[1mindex 91a4c9b..0000000[m
[1m--- a/node_modules/.bin/esvalidate[m
[1m+++ /dev/null[m
[36m@@ -1,12 +0,0 @@[m
[31m-#!/bin/sh[m
[31m-basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[31m-[m
[31m-case `uname` in[m
[31m-    *CYGWIN*|*MINGW*|*MSYS*) basedir=`cygpath -w "$basedir"`;;[m
[31m-esac[m
[31m-[m
[31m-if [ -x "$basedir/node" ]; then[m
[31m-  exec "$basedir/node"  "$basedir/../esprima/bin/esvalidate.js" "$@"[m
[31m-else [m
[31m-  exec node  "$basedir/../esprima/bin/esvalidate.js" "$@"[m
[31m-fi[m
[1mdiff --git a/node_modules/.bin/esvalidate.cmd b/node_modules/.bin/esvalidate.cmd[m
[1mdeleted file mode 100644[m
[1mindex 4c41643..0000000[m
[1m--- a/node_modules/.bin/esvalidate.cmd[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-@ECHO off[m
[31m-GOTO start[m
[31m-:find_dp0[m
[31m-SET dp0=%~dp0[m
[31m-EXIT /b[m
[31m-:start[m
[31m-SETLOCAL[m
[31m-CALL :find_dp0[m
[31m-[m
[31m-IF EXIST "%dp0%\node.exe" ([m
[31m-  SET "_prog=%dp0%\node.exe"[m
[31m-) ELSE ([m
[31m-  SET "_prog=node"[m
[31m-  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[31m-)[m
[31m-[m
[31m-endLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\esprima\bin\esvalidate.js" %*[m
[1mdiff --git a/node_modules/.bin/esvalidate.ps1 b/node_modules/.bin/esvalidate.ps1[m
[1mdeleted file mode 100644[m
[1mindex 23699d1..0000000[m
[1m--- a/node_modules/.bin/esvalidate.ps1[m
[1m+++ /dev/null[m
[36m@@ -1,28 +0,0 @@[m
[31m-#!/usr/bin/env pwsh[m
[31m-$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[31m-[m
[31m-$exe=""[m
[31m-if ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[31m-  # Fix case when both the Windows and Linux builds of Node[m
[31m-  # are installed in the same directory[m
[31m-  $exe=".exe"[m
[31m-}[m
[31m-$ret=0[m
[31m-if (Test-Path "$basedir/node$exe") {[m
[31m-  # Support pipeline input[m
[31m-  if ($MyInvocation.ExpectingInput) {[m
[31m-    $input | & "$basedir/node$exe"  "$basedir/../esprima/bin/esvalidate.js" $args[m
[31m-  } else {[m
[31m-    & "$basedir/node$exe"  "$basedir/../esprima/bin/esvalidate.js" $args[m
[31m-  }[m
[31m-  $ret=$LASTEXITCODE[m
[31m-} else {[m
[31m-  # Support pipeline input[m
[31m-  if ($MyInvocation.ExpectingInput) {[m
[31m-    $input | & "node$exe"  "$basedir/../esprima/bin/esvalidate.js" $args[m
[31m-  } else {[m
[31m-    & "node$exe"  "$basedir/../esprima/bin/esvalidate.js" $args[m
[31m-  }[m
[31m-  $ret=$LASTEXITCODE[m
[31m-}[m
[31m-exit $ret[m
[1mdiff --git a/node_modules/.bin/extract-zip b/node_modules/.bin/extract-zip[m
[1mdeleted file mode 100644[m
[1mindex 60e5770..0000000[m
[1m--- a/node_modules/.bin/extract-zip[m
[1m+++ /dev/null[m
[36m@@ -1,12 +0,0 @@[m
[31m-#!/bin/sh[m
[31m-basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[31m-[m
[31m-case `uname` in[m
[31m-    *CYGWIN*|*MINGW*|*MSYS*) basedir=`cygpath -w "$basedir"`;;[m
[31m-esac[m
[31m-[m
[31m-if [ -x "$basedir/node" ]; then[m
[31m-  exec "$basedir/node"  "$basedir/../extract-zip/cli.js" "$@"[m
[31m-else [m
[31m-  exec node  "$basedir/../extract-zip/cli.js" "$@"[m
[31m-fi[m
[1mdiff --git a/node_modules/.bin/extract-zip.cmd b/node_modules/.bin/extract-zip.cmd[m
[1mdeleted file mode 100644[m
[1mindex 6767bfe..0000000[m
[1m--- a/node_modules/.bin/extract-zip.cmd[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-@ECHO off[m
[31m-GOTO